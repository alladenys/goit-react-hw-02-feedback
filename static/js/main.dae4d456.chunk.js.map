{"version":3,"sources":["components/Statistic/Statistic.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notifications/Notification.module.css","components/Container/Container.module.css","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistic/Statistic.jsx","components/Notifications/Notification.jsx","components/Container/Container.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Section","title","children","className","style","section","FeedbackOptions","options","onLeaveFeedback","feedbackMenu","map","option","button","type","onClick","Statistic","good","neutral","bad","total","positivePercentage","statysticItem","defaultProps","Notification","message","Container","mainContainer","App","state","leaveFeedback","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","totalFeedback","Math","round","this","Object","keys","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dae4d456.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statysticItem\":\"Statistic_statysticItem__3_AFY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackMenu\":\"FeedbackOptions_feedbackMenu__2eDEL\",\"button\":\"FeedbackOptions_button__3n-hy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__2Wu4h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Container_mainContainer__xQrA0\"};","import style from './Section.module.css'\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst Section = ({ title, children }) => (\n    <div className={style.section}>\n        <div className={style.title}>{title}</div>\n        <div>{children}</div>\n    </div>\n)\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\nexport default Section;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n    <div className={style.feedbackMenu}>\n        {options.map(option=> (\n        <button className={style.button} type=\"button\" key={option} onClick={()=> onLeaveFeedback(option)}>{option}</button>\n        ))}\n    </div>\n)\n    \nFeedbackOptions.propTypes = {\n    options: PropTypes.array.isRequired,\n    onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;","import React from 'react';\nimport style from './Statistic.module.css';\nimport PropTypes from 'prop-types';\n\nconst Statistic = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n      <div>\n        <span className={style.statysticItem}>Good:{good}</span>\n        <span className={style.statysticItem}>Neutral:{neutral}</span>\n        <span className={style.statysticItem}>Bad:{bad}</span>\n        <span className={style.statysticItem}>Total:{total}</span>\n        <span className={style.statysticItem}>\n          Positive percentage:{positivePercentage}%\n        </span>\n     </div>\n  );\n};\n\nStatistic.defaultProps = {\n  total: 0,\n  positivePercentage: 0,\n};\n\nStatistic.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistic;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Notification.module.css';\n\nconst Notification = ({message}) =>(<div className={style.message}>{message}</div>)\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired,\n};\n\nexport default Notification;","import React from 'react';\nimport style from './Container.module.css';\n\nconst Container = ({ children }) => <div className={style.mainContainer}>{children}</div>;\n\nexport default Container;","import React, { Component } from 'react';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistic/Statistic';\nimport Notification from './components/Notifications/Notification';\nimport Container from './components/Container/Container';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  leaveFeedback = option => {\n    this.setState(prevState => ({\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const total = this.state.bad + this.state.neutral + this.state.good;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const totalFeedback = this.countTotalFeedback();\n    const positivePercentage = Math.round(\n      (this.state.good / totalFeedback) * 100,\n    );\n    return positivePercentage;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.leaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {totalFeedback <= 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}